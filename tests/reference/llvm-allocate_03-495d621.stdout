; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [2 x i8] c" \00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1

define void @f(%array* %c) {
.entry:
  %0 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %1, align 1
  %2 = getelementptr %array, %array* %c, i32 0, i32 2
  %3 = load %dimension_descriptor*, %dimension_descriptor** %2, align 8
  %4 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 0
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 1
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 2
  store i32 1, i32* %5, align 4
  store i32 1, i32* %6, align 4
  store i32 3, i32* %7, align 4
  %8 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 2
  store i32 1, i32* %9, align 4
  store i32 1, i32* %10, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 2
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  store i32 1, i32* %13, align 4
  store i32 1, i32* %14, align 4
  store i32 3, i32* %15, align 4
  %16 = getelementptr %array, %array* %c, i32 0, i32 0
  %17 = alloca i32, align 4
  store i32 108, i32* %17, align 4
  %18 = load i32, i32* %17, align 4
  %19 = call i8* (i32, ...) @_lfortran_malloc(i32 %18)
  %20 = bitcast i8* %19 to i32*
  store i32* %20, i32** %16, align 8
  %21 = getelementptr %array, %array* %c, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %22, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 1, %25
  %27 = mul i32 1, %26
  %28 = add i32 0, %27
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = mul i32 1, %30
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %22, i32 1
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub i32 1, %34
  %36 = mul i32 %31, %35
  %37 = add i32 %28, %36
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = mul i32 %31, %39
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %22, i32 2
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 1, %43
  %45 = mul i32 %40, %44
  %46 = add i32 %37, %45
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = mul i32 %40, %48
  %50 = getelementptr %array, %array* %c, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds i32, i32* %51, i32 %46
  store i32 99, i32* %52, align 4
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define i32 @g(%array* %x) {
.entry:
  %r = alloca i32, align 4
  %0 = getelementptr %array, %array* %x, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 1, %4
  %6 = mul i32 1, %5
  %7 = add i32 0, %6
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 1, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = mul i32 %10, %14
  %16 = add i32 %7, %15
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = mul i32 %10, %18
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 1, %22
  %24 = mul i32 %19, %23
  %25 = add i32 %16, %24
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = mul i32 %19, %27
  %29 = getelementptr %array, %array* %x, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 %25
  %32 = load i32, i32* %31, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %33 = alloca %array, align 8
  call void @f(%array* %x)
  %34 = getelementptr %array, %array* %x, i32 0, i32 2
  %35 = load %dimension_descriptor*, %dimension_descriptor** %34, align 8
  %36 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 1, %38
  %40 = mul i32 1, %39
  %41 = add i32 0, %40
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 1, %43
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 1, %47
  %49 = mul i32 %44, %48
  %50 = add i32 %41, %49
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = mul i32 %44, %52
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 1, %56
  %58 = mul i32 %53, %57
  %59 = add i32 %50, %58
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = mul i32 %53, %61
  %63 = getelementptr %array, %array* %x, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i32 %59
  %66 = load i32, i32* %65, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i32 %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  %67 = getelementptr %array, %array* %x, i32 0, i32 2
  %68 = load %dimension_descriptor*, %dimension_descriptor** %67, align 8
  %69 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 1, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 1, %80
  %82 = mul i32 %77, %81
  %83 = add i32 %74, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 %77, %85
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 2
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 1, %89
  %91 = mul i32 %86, %90
  %92 = add i32 %83, %91
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = mul i32 %86, %94
  %96 = getelementptr %array, %array* %x, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = getelementptr inbounds i32, i32* %97, i32 %92
  store i32 8, i32* %98, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %.entry
  %99 = load i32, i32* %r, align 4
  ret i32 %99
}

define void @h(%array* %c) {
.entry:
  %0 = getelementptr %array, %array* %c, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 1, %4
  %6 = mul i32 1, %5
  %7 = add i32 0, %6
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 1, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = mul i32 %10, %14
  %16 = add i32 %7, %15
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = mul i32 %10, %18
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 1, %22
  %24 = mul i32 %19, %23
  %25 = add i32 %16, %24
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = mul i32 %19, %27
  %29 = getelementptr %array, %array* %c, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 %25
  %32 = load i32, i32* %31, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i32 %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %33 = alloca %array, align 8
  call void @f(%array* %c)
  %34 = getelementptr %array, %array* %c, i32 0, i32 2
  %35 = load %dimension_descriptor*, %dimension_descriptor** %34, align 8
  %36 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 1, %38
  %40 = mul i32 1, %39
  %41 = add i32 0, %40
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 1, %43
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 1, %47
  %49 = mul i32 %44, %48
  %50 = add i32 %41, %49
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = mul i32 %44, %52
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 1, %56
  %58 = mul i32 %53, %57
  %59 = add i32 %50, %58
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = mul i32 %53, %61
  %63 = getelementptr %array, %array* %c, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i32 %59
  %66 = load i32, i32* %65, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i32 %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  %67 = getelementptr %array, %array* %c, i32 0, i32 2
  %68 = load %dimension_descriptor*, %dimension_descriptor** %67, align 8
  %69 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 1, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 1, %80
  %82 = mul i32 %77, %81
  %83 = add i32 %74, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 %77, %85
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 2
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 1, %89
  %91 = mul i32 %86, %90
  %92 = add i32 %83, %91
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = mul i32 %86, %94
  %96 = getelementptr %array, %array* %c, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = getelementptr inbounds i32, i32* %97, i32 %92
  store i32 8, i32* %98, align 4
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

define i32 @main() {
.entry:
  %c = alloca %array, align 8
  %0 = getelementptr %array, %array* %c, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  store i32 1, i32* %stat, align 4
  %6 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %7, align 1
  %8 = getelementptr %array, %array* %c, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 0
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  store i32 1, i32* %11, align 4
  store i32 1, i32* %12, align 4
  store i32 3, i32* %13, align 4
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  store i32 1, i32* %15, align 4
  store i32 1, i32* %16, align 4
  store i32 3, i32* %17, align 4
  %18 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 2
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 1
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store i32 1, i32* %20, align 4
  store i32 3, i32* %21, align 4
  %22 = getelementptr %array, %array* %c, i32 0, i32 0
  %23 = alloca i32, align 4
  store i32 108, i32* %23, align 4
  %24 = load i32, i32* %23, align 4
  %25 = call i8* (i32, ...) @_lfortran_malloc(i32 %24)
  %26 = bitcast i8* %25 to i32*
  store i32* %26, i32** %22, align 8
  store i32 0, i32* %stat, align 4
  %27 = load i32, i32* %stat, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %29 = getelementptr %array, %array* %c, i32 0, i32 2
  %30 = load %dimension_descriptor*, %dimension_descriptor** %29, align 8
  %31 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %30, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 1, %33
  %35 = mul i32 1, %34
  %36 = add i32 0, %35
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = mul i32 1, %38
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %30, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 1, %42
  %44 = mul i32 %39, %43
  %45 = add i32 %36, %44
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = mul i32 %39, %47
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %30, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 1, %51
  %53 = mul i32 %48, %52
  %54 = add i32 %45, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 %48, %56
  %58 = getelementptr %array, %array* %c, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds i32, i32* %59, i32 %54
  store i32 3, i32* %60, align 4
  %61 = alloca %array, align 8
  call void @h(%array* %c)
  %62 = alloca %array, align 8
  %63 = call i32 @g(%array* %c)
  store i32 %63, i32* %r, align 4
  %64 = getelementptr %array, %array* %c, i32 0, i32 2
  %65 = load %dimension_descriptor*, %dimension_descriptor** %64, align 8
  %66 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %65, i32 0
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 1, %68
  %70 = mul i32 1, %69
  %71 = add i32 0, %70
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 1, %73
  %75 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %65, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 1, %77
  %79 = mul i32 %74, %78
  %80 = add i32 %71, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %74, %82
  %84 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %65, i32 2
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 1, %86
  %88 = mul i32 %83, %87
  %89 = add i32 %80, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %83, %91
  %93 = getelementptr %array, %array* %c, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = getelementptr inbounds i32, i32* %94, i32 %89
  %96 = load i32, i32* %95, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i32 %96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0))
  %97 = getelementptr %array, %array* %c, i32 0, i32 3
  %98 = load i1, i1* %97, align 1
  br i1 %98, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %99 = getelementptr %array, %array* %c, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = alloca i8*, align 8
  %102 = bitcast i32* %100 to i8*
  store i8* %102, i8** %101, align 8
  %103 = load i8*, i8** %101, align 8
  call void (i8*, ...) @_lfortran_free(i8* %103)
  %104 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %104, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare void @exit(i32)

declare void @_lfortran_free(i8*, ...)
