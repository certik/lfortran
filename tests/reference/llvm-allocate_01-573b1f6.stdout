; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type { float, float }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { float*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define %complex_4 @reduce_sum_c(%complex_4* %c, i32* %"1c", i32* %"2c", i32* %"3c", i32* %"4c", i32* %"5c", i32* %"6c") {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = load i32, i32* %"1c", align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = load i32, i32* %"2c", align 4
  %9 = load i32, i32* %"1c", align 4
  %10 = add i32 %8, %9
  %11 = sub i32 %10, 1
  %12 = icmp sle i32 %7, %11
  br i1 %12, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %"3c", align 4
  %16 = sub i32 %15, 1
  store i32 %16, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %17 = load i32, i32* %j, align 4
  %18 = add i32 %17, 1
  %19 = load i32, i32* %"4c", align 4
  %20 = load i32, i32* %"3c", align 4
  %21 = add i32 %19, %20
  %22 = sub i32 %21, 1
  %23 = icmp sle i32 %18, %22
  br i1 %23, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %24 = load i32, i32* %j, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %j, align 4
  %26 = load i32, i32* %"5c", align 4
  %27 = sub i32 %26, 1
  store i32 %27, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %28 = load i32, i32* %k, align 4
  %29 = add i32 %28, 1
  %30 = load i32, i32* %"6c", align 4
  %31 = load i32, i32* %"5c", align 4
  %32 = add i32 %30, %31
  %33 = sub i32 %32, 1
  %34 = icmp sle i32 %29, %33
  br i1 %34, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %35 = load i32, i32* %k, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %k, align 4
  %37 = load %complex_4, %complex_4* %r, align 4
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %j, align 4
  %40 = load i32, i32* %k, align 4
  %41 = load i32, i32* %"1c", align 4
  %42 = load i32, i32* %"2c", align 4
  %43 = load i32, i32* %"3c", align 4
  %44 = load i32, i32* %"4c", align 4
  %45 = load i32, i32* %"5c", align 4
  %46 = load i32, i32* %"6c", align 4
  %47 = sub i32 %38, %41
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = mul i32 1, %42
  %51 = sub i32 %39, %43
  %52 = mul i32 %50, %51
  %53 = add i32 %49, %52
  %54 = mul i32 %50, %44
  %55 = sub i32 %40, %45
  %56 = mul i32 %54, %55
  %57 = add i32 %53, %56
  %58 = mul i32 %54, %46
  %59 = getelementptr inbounds %complex_4, %complex_4* %c, i32 %57
  %60 = load %complex_4, %complex_4* %59, align 4
  %61 = alloca %complex_4, align 8
  store %complex_4 %37, %complex_4* %61, align 4
  %62 = alloca %complex_4, align 8
  store %complex_4 %60, %complex_4* %62, align 4
  %63 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %61, %complex_4* %62, %complex_4* %63)
  %64 = load %complex_4, %complex_4* %63, align 4
  store %complex_4 %64, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %65 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %65
}

define void @sum(%array* %a, %array.0* %b, %array.1* %c) {
.entry:
  %c_copy = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = getelementptr %array, %array* %a, i32 0, i32 2
  %7 = load %dimension_descriptor*, %dimension_descriptor** %6, align 8
  %8 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %7, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr %array, %array* %a, i32 0, i32 2
  %12 = load %dimension_descriptor*, %dimension_descriptor** %11, align 8
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %15
  %19 = sub i32 %18, 1
  %20 = getelementptr %array, %array* %a, i32 0, i32 2
  %21 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 %19, %24
  %26 = add i32 %25, 1
  %27 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 %40, %45
  %47 = add i32 %46, 1
  %48 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, %57
  %61 = sub i32 %60, 1
  %62 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 1
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %61, %66
  %68 = add i32 %67, 1
  %69 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 true, i1* %70, align 1
  %71 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 0
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 2
  store i32 1, i32* %74, align 4
  store i32 %10, i32* %75, align 4
  %77 = mul i32 1, %26
  store i32 %26, i32* %76, align 4
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  store i32 1, i32* %79, align 4
  store i32 %31, i32* %80, align 4
  %82 = mul i32 %77, %47
  store i32 %47, i32* %81, align 4
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 2
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  store i32 1, i32* %84, align 4
  store i32 %52, i32* %85, align 4
  %87 = mul i32 %82, %68
  store i32 %68, i32* %86, align 4
  %88 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %89 = alloca i32, align 4
  %90 = mul i32 %87, 8
  store i32 %90, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = call i8* (i32, ...) @_lfortran_malloc(i32 %91)
  %93 = bitcast i8* %92 to %complex_4*
  store %complex_4* %93, %complex_4** %88, align 8
  %94 = getelementptr %array, %array* %a, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr %array, %array* %a, i32 0, i32 2
  %100 = load %dimension_descriptor*, %dimension_descriptor** %99, align 8
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, %103
  %107 = sub i32 %106, 1
  %108 = getelementptr %array, %array* %a, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  %110 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 %107, %112
  %114 = add i32 %113, 1
  %115 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, %124
  %128 = sub i32 %127, 1
  %129 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %130 = load %dimension_descriptor*, %dimension_descriptor** %129, align 8
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %130, i32 0
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %128, %133
  %135 = add i32 %134, 1
  %136 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %137 = load %dimension_descriptor*, %dimension_descriptor** %136, align 8
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %137, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %142 = load %dimension_descriptor*, %dimension_descriptor** %141, align 8
  %143 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %142, i32 1
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, %145
  %149 = sub i32 %148, 1
  %150 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 1
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %149, %154
  %156 = add i32 %155, 1
  %157 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %157, align 4
  %158 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 true, i1* %158, align 1
  %159 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 2
  store i32 1, i32* %162, align 4
  store i32 %98, i32* %163, align 4
  %165 = mul i32 1, %114
  store i32 %114, i32* %164, align 4
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 1
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 2
  store i32 1, i32* %167, align 4
  store i32 %119, i32* %168, align 4
  %170 = mul i32 %165, %135
  store i32 %135, i32* %169, align 4
  %171 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 2
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 0
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 1
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 2
  store i32 1, i32* %172, align 4
  store i32 %140, i32* %173, align 4
  %175 = mul i32 %170, %156
  store i32 %156, i32* %174, align 4
  %176 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %177 = alloca i32, align 4
  %178 = mul i32 %175, 8
  store i32 %178, i32* %177, align 4
  %179 = load i32, i32* %177, align 4
  %180 = call i8* (i32, ...) @_lfortran_malloc(i32 %179)
  %181 = bitcast i8* %180 to %complex_4*
  store %complex_4* %181, %complex_4** %176, align 8
  %182 = getelementptr %array, %array* %a, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 %186, 1
  store i32 %187, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %188 = load i32, i32* %i, align 4
  %189 = add i32 %188, 1
  %190 = getelementptr %array, %array* %a, i32 0, i32 2
  %191 = load %dimension_descriptor*, %dimension_descriptor** %190, align 8
  %192 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %191, i32 0
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %196, %194
  %198 = sub i32 %197, 1
  %199 = icmp sle i32 %189, %198
  br i1 %199, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %200 = load i32, i32* %i, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %i, align 4
  %202 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %203 = load %dimension_descriptor*, %dimension_descriptor** %202, align 8
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %203, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %206, 1
  store i32 %207, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %208 = load i32, i32* %j, align 4
  %209 = add i32 %208, 1
  %210 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %211, i32 0
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, %214
  %218 = sub i32 %217, 1
  %219 = icmp sle i32 %209, %218
  br i1 %219, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %220 = load i32, i32* %j, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %j, align 4
  %222 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %223 = load %dimension_descriptor*, %dimension_descriptor** %222, align 8
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %223, i32 1
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %226, 1
  store i32 %227, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %228 = load i32, i32* %k, align 4
  %229 = add i32 %228, 1
  %230 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 1
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = add i32 %236, %234
  %238 = sub i32 %237, 1
  %239 = icmp sle i32 %229, %238
  br i1 %239, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %240 = load i32, i32* %k, align 4
  %241 = add i32 %240, 1
  store i32 %241, i32* %k, align 4
  %242 = load i32, i32* %i, align 4
  %243 = load i32, i32* %j, align 4
  %244 = load i32, i32* %k, align 4
  %245 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 0
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %242, %249
  %251 = mul i32 1, %250
  %252 = add i32 0, %251
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = mul i32 1, %254
  %256 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 1
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 %243, %258
  %260 = mul i32 %255, %259
  %261 = add i32 %252, %260
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = mul i32 %255, %263
  %265 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 2
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = sub i32 %244, %267
  %269 = mul i32 %264, %268
  %270 = add i32 %261, %269
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 2
  %272 = load i32, i32* %271, align 4
  %273 = mul i32 %264, %272
  %274 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %275 = load %complex_4*, %complex_4** %274, align 8
  %276 = getelementptr inbounds %complex_4, %complex_4* %275, i32 %270
  %277 = load i32, i32* %i, align 4
  %278 = getelementptr %array, %array* %a, i32 0, i32 2
  %279 = load %dimension_descriptor*, %dimension_descriptor** %278, align 8
  %280 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %279, i32 0
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %277, %282
  %284 = mul i32 1, %283
  %285 = add i32 0, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 1, %287
  %289 = getelementptr %array, %array* %a, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  %291 = getelementptr inbounds i32, i32* %290, i32 %285
  %292 = load i32, i32* %291, align 4
  %293 = sitofp i32 %292 to float
  %294 = load i32, i32* %j, align 4
  %295 = load i32, i32* %k, align 4
  %296 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %297 = load %dimension_descriptor*, %dimension_descriptor** %296, align 8
  %298 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 0
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 %294, %300
  %302 = mul i32 1, %301
  %303 = add i32 0, %302
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 2
  %305 = load i32, i32* %304, align 4
  %306 = mul i32 1, %305
  %307 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 1
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 %295, %309
  %311 = mul i32 %306, %310
  %312 = add i32 %303, %311
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = mul i32 %306, %314
  %316 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %317 = load float*, float** %316, align 8
  %318 = getelementptr inbounds float, float* %317, i32 %312
  %319 = load float, float* %318, align 4
  %320 = fadd float %293, %319
  %321 = alloca %complex_4, align 8
  %322 = getelementptr %complex_4, %complex_4* %321, i32 0, i32 0
  %323 = getelementptr %complex_4, %complex_4* %321, i32 0, i32 1
  store float %320, float* %322, align 4
  store float 0.000000e+00, float* %323, align 4
  %324 = load %complex_4, %complex_4* %321, align 4
  store %complex_4 %324, %complex_4* %276, align 4
  %325 = load i32, i32* %i, align 4
  %326 = load i32, i32* %j, align 4
  %327 = load i32, i32* %k, align 4
  %328 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %329 = load %dimension_descriptor*, %dimension_descriptor** %328, align 8
  %330 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 0
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sub i32 %325, %332
  %334 = mul i32 1, %333
  %335 = add i32 0, %334
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = mul i32 1, %337
  %339 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 1
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = sub i32 %326, %341
  %343 = mul i32 %338, %342
  %344 = add i32 %335, %343
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 2
  %346 = load i32, i32* %345, align 4
  %347 = mul i32 %338, %346
  %348 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 2
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = sub i32 %327, %350
  %352 = mul i32 %347, %351
  %353 = add i32 %344, %352
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 2
  %355 = load i32, i32* %354, align 4
  %356 = mul i32 %347, %355
  %357 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %358 = load %complex_4*, %complex_4** %357, align 8
  %359 = getelementptr inbounds %complex_4, %complex_4* %358, i32 %353
  %360 = load i32, i32* %i, align 4
  %361 = getelementptr %array, %array* %a, i32 0, i32 2
  %362 = load %dimension_descriptor*, %dimension_descriptor** %361, align 8
  %363 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %362, i32 0
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = sub i32 %360, %365
  %367 = mul i32 1, %366
  %368 = add i32 0, %367
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 2
  %370 = load i32, i32* %369, align 4
  %371 = mul i32 1, %370
  %372 = getelementptr %array, %array* %a, i32 0, i32 0
  %373 = load i32*, i32** %372, align 8
  %374 = getelementptr inbounds i32, i32* %373, i32 %368
  %375 = load i32, i32* %374, align 4
  %376 = sitofp i32 %375 to float
  %377 = load i32, i32* %j, align 4
  %378 = load i32, i32* %k, align 4
  %379 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %380 = load %dimension_descriptor*, %dimension_descriptor** %379, align 8
  %381 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 0
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = sub i32 %377, %383
  %385 = mul i32 1, %384
  %386 = add i32 0, %385
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = mul i32 1, %388
  %390 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 1
  %391 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = sub i32 %378, %392
  %394 = mul i32 %389, %393
  %395 = add i32 %386, %394
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 2
  %397 = load i32, i32* %396, align 4
  %398 = mul i32 %389, %397
  %399 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %400 = load float*, float** %399, align 8
  %401 = getelementptr inbounds float, float* %400, i32 %395
  %402 = load float, float* %401, align 4
  %403 = fadd float %376, %402
  %404 = alloca %complex_4, align 8
  %405 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 0
  %406 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 1
  store float %403, float* %405, align 4
  store float 0.000000e+00, float* %406, align 4
  %407 = load %complex_4, %complex_4* %404, align 4
  store %complex_4 %407, %complex_4* %359, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %408 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %409 = load %complex_4*, %complex_4** %408, align 8
  %410 = alloca i8*, align 8
  %411 = bitcast %complex_4* %409 to i8*
  store i8* %411, i8** %410, align 8
  %412 = load i8*, i8** %410, align 8
  call void (i8*, ...) @_lfortran_free(i8* %412)
  %413 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 false, i1* %413, align 1
  %414 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  %415 = load i1, i1* %414, align 1
  br i1 %415, label %then, label %else

then:                                             ; preds = %loop.end6
  %416 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %417 = load %complex_4*, %complex_4** %416, align 8
  %418 = alloca i8*, align 8
  %419 = bitcast %complex_4* %417 to i8*
  store i8* %419, i8** %418, align 8
  %420 = load i8*, i8** %418, align 8
  call void (i8*, ...) @_lfortran_free(i8* %420)
  %421 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 false, i1* %421, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %call_arg_value56 = alloca i32, align 4
  %call_arg_value55 = alloca i32, align 4
  %call_arg_value54 = alloca i32, align 4
  %call_arg_value53 = alloca i32, align 4
  %call_arg_value52 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.0, align 8
  %6 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 2, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  store i32 2, i32* %10, align 4
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array.1, align 8
  %12 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array.1, %array.1* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %18 = load i32, i32* %n, align 4
  %19 = add i32 %18, 1
  %20 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %21, align 1
  %22 = getelementptr %array, %array* %a, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 5, i32* %26, align 4
  %28 = mul i32 1, %19
  store i32 %19, i32* %27, align 4
  %29 = getelementptr %array, %array* %a, i32 0, i32 0
  %30 = alloca i32, align 4
  %31 = mul i32 %28, 4
  store i32 %31, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = call i8* (i32, ...) @_lfortran_malloc(i32 %32)
  %34 = bitcast i8* %33 to i32*
  store i32* %34, i32** %29, align 8
  %35 = load i32, i32* %n, align 4
  %36 = load i32, i32* %n, align 4
  %37 = mul i32 2, %36
  %38 = load i32, i32* %n, align 4
  %39 = sub i32 %37, %38
  %40 = add i32 %39, 1
  %41 = load i32, i32* %n, align 4
  %42 = load i32, i32* %n, align 4
  %43 = mul i32 3, %42
  %44 = load i32, i32* %n, align 4
  %45 = sub i32 %43, %44
  %46 = add i32 %45, 1
  %47 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %48, align 1
  %49 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %50 = load %dimension_descriptor*, %dimension_descriptor** %49, align 8
  %51 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %50, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 2
  store i32 1, i32* %52, align 4
  store i32 %35, i32* %53, align 4
  %55 = mul i32 1, %40
  store i32 %40, i32* %54, align 4
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %50, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  store i32 1, i32* %57, align 4
  store i32 %41, i32* %58, align 4
  %60 = mul i32 %55, %46
  store i32 %46, i32* %59, align 4
  %61 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %62 = alloca i32, align 4
  %63 = mul i32 %60, 4
  store i32 %63, i32* %62, align 4
  %64 = load i32, i32* %62, align 4
  %65 = call i8* (i32, ...) @_lfortran_malloc(i32 %64)
  %66 = bitcast i8* %65 to float*
  store float* %66, float** %61, align 8
  store i32 0, i32* %ierr, align 4
  %67 = getelementptr %array, %array* %a, i32 0, i32 2
  %68 = load %dimension_descriptor*, %dimension_descriptor** %67, align 8
  %69 = getelementptr %array, %array* %a, i32 0, i32 4
  %70 = load i32, i32* %69, align 4
  %71 = alloca i32, align 4
  store i32 1, i32* %71, align 4
  %72 = alloca i32, align 4
  store i32 0, i32* %72, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, %70
  br i1 %74, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %75 = load i32, i32* %72, align 4
  %76 = load i32, i32* %71, align 4
  %77 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 %75
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = mul i32 %76, %79
  store i32 %80, i32* %71, align 4
  %81 = add i32 %75, 1
  store i32 %81, i32* %72, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %82 = load i32, i32* %71, align 4
  %83 = load i32, i32* %n, align 4
  %84 = add i32 %83, 1
  %85 = icmp ne i32 %82, %84
  br i1 %85, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %86 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %87 = load %dimension_descriptor*, %dimension_descriptor** %86, align 8
  %88 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  %89 = load i32, i32* %88, align 4
  %90 = alloca i32, align 4
  store i32 1, i32* %90, align 4
  %91 = alloca i32, align 4
  store i32 0, i32* %91, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %ifcont
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, %89
  br i1 %93, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %94 = load i32, i32* %91, align 4
  %95 = load i32, i32* %90, align 4
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %87, i32 %94
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 %95, %98
  store i32 %99, i32* %90, align 4
  %100 = add i32 %94, 1
  store i32 %100, i32* %91, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %101 = load i32, i32* %90, align 4
  %102 = load i32, i32* %n, align 4
  %103 = add i32 %102, 1
  %104 = load i32, i32* %n, align 4
  %105 = mul i32 2, %104
  %106 = add i32 %105, 1
  %107 = mul i32 %103, %106
  %108 = icmp ne i32 %101, %107
  br i1 %108, label %then4, label %else5

then4:                                            ; preds = %loop.end3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %loop.end3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %109 = getelementptr %array, %array* %a, i32 0, i32 2
  %110 = load %dimension_descriptor*, %dimension_descriptor** %109, align 8
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 %113, 1
  store i32 %114, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %115 = load i32, i32* %i, align 4
  %116 = add i32 %115, 1
  %117 = getelementptr %array, %array* %a, i32 0, i32 2
  %118 = load %dimension_descriptor*, %dimension_descriptor** %117, align 8
  %119 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %118, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, %121
  %125 = sub i32 %124, 1
  %126 = icmp sle i32 %116, %125
  br i1 %126, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %127 = load i32, i32* %i, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %i, align 4
  %129 = load i32, i32* %i, align 4
  %130 = getelementptr %array, %array* %a, i32 0, i32 2
  %131 = load %dimension_descriptor*, %dimension_descriptor** %130, align 8
  %132 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %131, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 %129, %134
  %136 = mul i32 1, %135
  %137 = add i32 0, %136
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = mul i32 1, %139
  %141 = getelementptr %array, %array* %a, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds i32, i32* %142, i32 %137
  %144 = load i32, i32* %i, align 4
  store i32 %144, i32* %143, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %145 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %146 = load %dimension_descriptor*, %dimension_descriptor** %145, align 8
  %147 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %146, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 %149, 1
  store i32 %150, i32* %i, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.end9
  %151 = load i32, i32* %i, align 4
  %152 = add i32 %151, 1
  %153 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %154 = load %dimension_descriptor*, %dimension_descriptor** %153, align 8
  %155 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %154, i32 0
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, %157
  %161 = sub i32 %160, 1
  %162 = icmp sle i32 %152, %161
  br i1 %162, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %163 = load i32, i32* %i, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %i, align 4
  %165 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %166 = load %dimension_descriptor*, %dimension_descriptor** %165, align 8
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 1
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 %169, 1
  store i32 %170, i32* %j, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %171 = load i32, i32* %j, align 4
  %172 = add i32 %171, 1
  %173 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %174 = load %dimension_descriptor*, %dimension_descriptor** %173, align 8
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %174, i32 1
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, %177
  %181 = sub i32 %180, 1
  %182 = icmp sle i32 %172, %181
  br i1 %182, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %183 = load i32, i32* %j, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %j, align 4
  %185 = load i32, i32* %i, align 4
  %186 = load i32, i32* %j, align 4
  %187 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 %185, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 1
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sub i32 %186, %200
  %202 = mul i32 %197, %201
  %203 = add i32 %194, %202
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = mul i32 %197, %205
  %207 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %208 = load float*, float** %207, align 8
  %209 = getelementptr inbounds float, float* %208, i32 %203
  %210 = load i32, i32* %i, align 4
  %211 = load i32, i32* %j, align 4
  %212 = add i32 %210, %211
  %213 = sitofp i32 %212 to float
  store float %213, float* %209, align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %214 = alloca %array, align 8
  %215 = alloca %array.0, align 8
  %216 = alloca %array.1, align 8
  call void @sum(%array* %a, %array.0* %b, %array.1* %c)
  %217 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %218 = load %dimension_descriptor*, %dimension_descriptor** %217, align 8
  %219 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %218, i32 0
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = icmp ne i32 %221, 5
  %223 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %224 = load %dimension_descriptor*, %dimension_descriptor** %223, align 8
  %225 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %224, i32 0
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %225, i32 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr %dimension_descriptor, %dimension_descriptor* %225, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = add i32 %229, %227
  %231 = sub i32 %230, 1
  %232 = load i32, i32* %n, align 4
  %233 = add i32 %232, 5
  %234 = icmp ne i32 %231, %233
  %235 = or i1 %222, %234
  br i1 %235, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %236 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %237 = load %dimension_descriptor*, %dimension_descriptor** %236, align 8
  %238 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %237, i32 1
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = load i32, i32* %n, align 4
  %242 = icmp ne i32 %240, %241
  %243 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %244 = load %dimension_descriptor*, %dimension_descriptor** %243, align 8
  %245 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %244, i32 1
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %245, i32 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %245, i32 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, %247
  %251 = sub i32 %250, 1
  %252 = load i32, i32* %n, align 4
  %253 = mul i32 2, %252
  %254 = icmp ne i32 %251, %253
  %255 = or i1 %242, %254
  br i1 %255, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %256 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %257 = load %dimension_descriptor*, %dimension_descriptor** %256, align 8
  %258 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %257, i32 2
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = load i32, i32* %n, align 4
  %262 = icmp ne i32 %260, %261
  %263 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %264 = load %dimension_descriptor*, %dimension_descriptor** %263, align 8
  %265 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %264, i32 2
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = add i32 %269, %267
  %271 = sub i32 %270, 1
  %272 = load i32, i32* %n, align 4
  %273 = mul i32 3, %272
  %274 = icmp ne i32 %271, %273
  %275 = or i1 %262, %274
  br i1 %275, label %then22, label %else23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  %276 = getelementptr %array, %array* %a, i32 0, i32 2
  %277 = load %dimension_descriptor*, %dimension_descriptor** %276, align 8
  %278 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %277, i32 0
  %279 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = sub i32 %280, 1
  store i32 %281, i32* %i, align 4
  br label %loop.head25

loop.head25:                                      ; preds = %ifcont29, %ifcont24
  %282 = load i32, i32* %i, align 4
  %283 = add i32 %282, 1
  %284 = getelementptr %array, %array* %a, i32 0, i32 2
  %285 = load %dimension_descriptor*, %dimension_descriptor** %284, align 8
  %286 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %285, i32 0
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %286, i32 0, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %286, i32 0, i32 2
  %290 = load i32, i32* %289, align 4
  %291 = add i32 %290, %288
  %292 = sub i32 %291, 1
  %293 = icmp sle i32 %283, %292
  br i1 %293, label %loop.body26, label %loop.end30

loop.body26:                                      ; preds = %loop.head25
  %294 = load i32, i32* %i, align 4
  %295 = add i32 %294, 1
  store i32 %295, i32* %i, align 4
  %296 = load i32, i32* %i, align 4
  %297 = getelementptr %array, %array* %a, i32 0, i32 2
  %298 = load %dimension_descriptor*, %dimension_descriptor** %297, align 8
  %299 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %298, i32 0
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = sub i32 %296, %301
  %303 = mul i32 1, %302
  %304 = add i32 0, %303
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 2
  %306 = load i32, i32* %305, align 4
  %307 = mul i32 1, %306
  %308 = getelementptr %array, %array* %a, i32 0, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = getelementptr inbounds i32, i32* %309, i32 %304
  %311 = load i32, i32* %310, align 4
  %312 = load i32, i32* %i, align 4
  %313 = icmp ne i32 %311, %312
  br i1 %313, label %then27, label %else28

then27:                                           ; preds = %loop.body26
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.body26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  br label %loop.head25

loop.end30:                                       ; preds = %loop.head25
  %314 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %315 = load %dimension_descriptor*, %dimension_descriptor** %314, align 8
  %316 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %315, i32 0
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = sub i32 %318, 1
  store i32 %319, i32* %i, align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.end38, %loop.end30
  %320 = load i32, i32* %i, align 4
  %321 = add i32 %320, 1
  %322 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %323 = load %dimension_descriptor*, %dimension_descriptor** %322, align 8
  %324 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %323, i32 0
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 2
  %328 = load i32, i32* %327, align 4
  %329 = add i32 %328, %326
  %330 = sub i32 %329, 1
  %331 = icmp sle i32 %321, %330
  br i1 %331, label %loop.body32, label %loop.end39

loop.body32:                                      ; preds = %loop.head31
  %332 = load i32, i32* %i, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %i, align 4
  %334 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %335 = load %dimension_descriptor*, %dimension_descriptor** %334, align 8
  %336 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %335, i32 1
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 %338, 1
  store i32 %339, i32* %j, align 4
  br label %loop.head33

loop.head33:                                      ; preds = %ifcont37, %loop.body32
  %340 = load i32, i32* %j, align 4
  %341 = add i32 %340, 1
  %342 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %343 = load %dimension_descriptor*, %dimension_descriptor** %342, align 8
  %344 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %343, i32 1
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 2
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %348, %346
  %350 = sub i32 %349, 1
  %351 = icmp sle i32 %341, %350
  br i1 %351, label %loop.body34, label %loop.end38

loop.body34:                                      ; preds = %loop.head33
  %352 = load i32, i32* %j, align 4
  %353 = add i32 %352, 1
  store i32 %353, i32* %j, align 4
  %354 = load i32, i32* %i, align 4
  %355 = load i32, i32* %j, align 4
  %356 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %357 = load %dimension_descriptor*, %dimension_descriptor** %356, align 8
  %358 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %357, i32 0
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = sub i32 %354, %360
  %362 = mul i32 1, %361
  %363 = add i32 0, %362
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 2
  %365 = load i32, i32* %364, align 4
  %366 = mul i32 1, %365
  %367 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %357, i32 1
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %367, i32 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = sub i32 %355, %369
  %371 = mul i32 %366, %370
  %372 = add i32 %363, %371
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %367, i32 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = mul i32 %366, %374
  %376 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %377 = load float*, float** %376, align 8
  %378 = getelementptr inbounds float, float* %377, i32 %372
  %379 = load float, float* %378, align 4
  %380 = load i32, i32* %i, align 4
  %381 = load i32, i32* %j, align 4
  %382 = add i32 %380, %381
  %383 = sitofp i32 %382 to float
  %384 = fcmp une float %379, %383
  br i1 %384, label %then35, label %else36

then35:                                           ; preds = %loop.body34
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %loop.body34
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  br label %loop.head33

loop.end38:                                       ; preds = %loop.head33
  br label %loop.head31

loop.end39:                                       ; preds = %loop.head31
  %385 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %386 = load %dimension_descriptor*, %dimension_descriptor** %385, align 8
  %387 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %386, i32 0
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = sub i32 %389, 1
  store i32 %390, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end50, %loop.end39
  %391 = load i32, i32* %i, align 4
  %392 = add i32 %391, 1
  %393 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %394 = load %dimension_descriptor*, %dimension_descriptor** %393, align 8
  %395 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %394, i32 0
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 2
  %399 = load i32, i32* %398, align 4
  %400 = add i32 %399, %397
  %401 = sub i32 %400, 1
  %402 = icmp sle i32 %392, %401
  br i1 %402, label %loop.body41, label %loop.end51

loop.body41:                                      ; preds = %loop.head40
  %403 = load i32, i32* %i, align 4
  %404 = add i32 %403, 1
  store i32 %404, i32* %i, align 4
  %405 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %406 = load %dimension_descriptor*, %dimension_descriptor** %405, align 8
  %407 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %406, i32 1
  %408 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = sub i32 %409, 1
  store i32 %410, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.end49, %loop.body41
  %411 = load i32, i32* %j, align 4
  %412 = add i32 %411, 1
  %413 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %414 = load %dimension_descriptor*, %dimension_descriptor** %413, align 8
  %415 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %414, i32 1
  %416 = getelementptr %dimension_descriptor, %dimension_descriptor* %415, i32 0, i32 1
  %417 = load i32, i32* %416, align 4
  %418 = getelementptr %dimension_descriptor, %dimension_descriptor* %415, i32 0, i32 2
  %419 = load i32, i32* %418, align 4
  %420 = add i32 %419, %417
  %421 = sub i32 %420, 1
  %422 = icmp sle i32 %412, %421
  br i1 %422, label %loop.body43, label %loop.end50

loop.body43:                                      ; preds = %loop.head42
  %423 = load i32, i32* %j, align 4
  %424 = add i32 %423, 1
  store i32 %424, i32* %j, align 4
  %425 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %426 = load %dimension_descriptor*, %dimension_descriptor** %425, align 8
  %427 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %426, i32 2
  %428 = getelementptr %dimension_descriptor, %dimension_descriptor* %427, i32 0, i32 1
  %429 = load i32, i32* %428, align 4
  %430 = sub i32 %429, 1
  store i32 %430, i32* %k, align 4
  br label %loop.head44

loop.head44:                                      ; preds = %ifcont48, %loop.body43
  %431 = load i32, i32* %k, align 4
  %432 = add i32 %431, 1
  %433 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %434 = load %dimension_descriptor*, %dimension_descriptor** %433, align 8
  %435 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %434, i32 2
  %436 = getelementptr %dimension_descriptor, %dimension_descriptor* %435, i32 0, i32 1
  %437 = load i32, i32* %436, align 4
  %438 = getelementptr %dimension_descriptor, %dimension_descriptor* %435, i32 0, i32 2
  %439 = load i32, i32* %438, align 4
  %440 = add i32 %439, %437
  %441 = sub i32 %440, 1
  %442 = icmp sle i32 %432, %441
  br i1 %442, label %loop.body45, label %loop.end49

loop.body45:                                      ; preds = %loop.head44
  %443 = load i32, i32* %k, align 4
  %444 = add i32 %443, 1
  store i32 %444, i32* %k, align 4
  %445 = load i32, i32* %i, align 4
  %446 = load i32, i32* %j, align 4
  %447 = load i32, i32* %k, align 4
  %448 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %449 = load %dimension_descriptor*, %dimension_descriptor** %448, align 8
  %450 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %449, i32 0
  %451 = getelementptr %dimension_descriptor, %dimension_descriptor* %450, i32 0, i32 1
  %452 = load i32, i32* %451, align 4
  %453 = sub i32 %445, %452
  %454 = mul i32 1, %453
  %455 = add i32 0, %454
  %456 = getelementptr %dimension_descriptor, %dimension_descriptor* %450, i32 0, i32 2
  %457 = load i32, i32* %456, align 4
  %458 = mul i32 1, %457
  %459 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %449, i32 1
  %460 = getelementptr %dimension_descriptor, %dimension_descriptor* %459, i32 0, i32 1
  %461 = load i32, i32* %460, align 4
  %462 = sub i32 %446, %461
  %463 = mul i32 %458, %462
  %464 = add i32 %455, %463
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %459, i32 0, i32 2
  %466 = load i32, i32* %465, align 4
  %467 = mul i32 %458, %466
  %468 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %449, i32 2
  %469 = getelementptr %dimension_descriptor, %dimension_descriptor* %468, i32 0, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = sub i32 %447, %470
  %472 = mul i32 %467, %471
  %473 = add i32 %464, %472
  %474 = getelementptr %dimension_descriptor, %dimension_descriptor* %468, i32 0, i32 2
  %475 = load i32, i32* %474, align 4
  %476 = mul i32 %467, %475
  %477 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %478 = load %complex_4*, %complex_4** %477, align 8
  %479 = getelementptr inbounds %complex_4, %complex_4* %478, i32 %473
  %480 = load %complex_4, %complex_4* %479, align 4
  %481 = load i32, i32* %i, align 4
  %482 = load i32, i32* %j, align 4
  %483 = add i32 %481, %482
  %484 = load i32, i32* %k, align 4
  %485 = add i32 %483, %484
  %486 = sitofp i32 %485 to float
  %487 = alloca %complex_4, align 8
  %488 = getelementptr %complex_4, %complex_4* %487, i32 0, i32 0
  %489 = getelementptr %complex_4, %complex_4* %487, i32 0, i32 1
  store float %486, float* %488, align 4
  store float 0.000000e+00, float* %489, align 4
  %490 = load %complex_4, %complex_4* %487, align 4
  %491 = alloca %complex_4, align 8
  store %complex_4 %480, %complex_4* %491, align 4
  %492 = getelementptr %complex_4, %complex_4* %491, i32 0, i32 0
  %493 = load float, float* %492, align 4
  %494 = alloca %complex_4, align 8
  store %complex_4 %490, %complex_4* %494, align 4
  %495 = getelementptr %complex_4, %complex_4* %494, i32 0, i32 0
  %496 = load float, float* %495, align 4
  %497 = alloca %complex_4, align 8
  store %complex_4 %480, %complex_4* %497, align 4
  %498 = getelementptr %complex_4, %complex_4* %497, i32 0, i32 1
  %499 = load float, float* %498, align 4
  %500 = alloca %complex_4, align 8
  store %complex_4 %490, %complex_4* %500, align 4
  %501 = getelementptr %complex_4, %complex_4* %500, i32 0, i32 1
  %502 = load float, float* %501, align 4
  %503 = fcmp une float %493, %496
  %504 = fcmp une float %499, %502
  %505 = and i1 %503, %504
  br i1 %505, label %then46, label %else47

then46:                                           ; preds = %loop.body45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.body45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  br label %loop.head44

loop.end49:                                       ; preds = %loop.head44
  br label %loop.head42

loop.end50:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end51:                                       ; preds = %loop.head40
  %506 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %507 = load %complex_4*, %complex_4** %506, align 8
  %508 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %509 = load %dimension_descriptor*, %dimension_descriptor** %508, align 8
  %510 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %509, i32 0
  %511 = getelementptr %dimension_descriptor, %dimension_descriptor* %510, i32 0, i32 1
  %512 = load i32, i32* %511, align 4
  store i32 %512, i32* %call_arg_value, align 4
  %513 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %514 = load %dimension_descriptor*, %dimension_descriptor** %513, align 8
  %515 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %514, i32 0
  %516 = getelementptr %dimension_descriptor, %dimension_descriptor* %515, i32 0, i32 2
  %517 = load i32, i32* %516, align 4
  store i32 %517, i32* %call_arg_value52, align 4
  %518 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %519 = load %dimension_descriptor*, %dimension_descriptor** %518, align 8
  %520 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %519, i32 1
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 1
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %call_arg_value53, align 4
  %523 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %524 = load %dimension_descriptor*, %dimension_descriptor** %523, align 8
  %525 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %524, i32 1
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 2
  %527 = load i32, i32* %526, align 4
  store i32 %527, i32* %call_arg_value54, align 4
  %528 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %529 = load %dimension_descriptor*, %dimension_descriptor** %528, align 8
  %530 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %529, i32 2
  %531 = getelementptr %dimension_descriptor, %dimension_descriptor* %530, i32 0, i32 1
  %532 = load i32, i32* %531, align 4
  store i32 %532, i32* %call_arg_value55, align 4
  %533 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %534 = load %dimension_descriptor*, %dimension_descriptor** %533, align 8
  %535 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %534, i32 2
  %536 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 2
  %537 = load i32, i32* %536, align 4
  store i32 %537, i32* %call_arg_value56, align 4
  %538 = call %complex_4 @reduce_sum_c(%complex_4* %507, i32* %call_arg_value, i32* %call_arg_value52, i32* %call_arg_value53, i32* %call_arg_value54, i32* %call_arg_value55, i32* %call_arg_value56)
  store %complex_4 %538, %complex_4* %r, align 4
  %539 = load %complex_4, %complex_4* %r, align 4
  %540 = alloca %complex_4, align 8
  %541 = getelementptr %complex_4, %complex_4* %540, i32 0, i32 0
  %542 = getelementptr %complex_4, %complex_4* %540, i32 0, i32 1
  store float 1.143450e+05, float* %541, align 4
  store float 0.000000e+00, float* %542, align 4
  %543 = load %complex_4, %complex_4* %540, align 4
  %544 = alloca %complex_4, align 8
  store %complex_4 %539, %complex_4* %544, align 4
  %545 = getelementptr %complex_4, %complex_4* %544, i32 0, i32 0
  %546 = load float, float* %545, align 4
  %547 = alloca %complex_4, align 8
  store %complex_4 %543, %complex_4* %547, align 4
  %548 = getelementptr %complex_4, %complex_4* %547, i32 0, i32 0
  %549 = load float, float* %548, align 4
  %550 = alloca %complex_4, align 8
  store %complex_4 %539, %complex_4* %550, align 4
  %551 = getelementptr %complex_4, %complex_4* %550, i32 0, i32 1
  %552 = load float, float* %551, align 4
  %553 = alloca %complex_4, align 8
  store %complex_4 %543, %complex_4* %553, align 4
  %554 = getelementptr %complex_4, %complex_4* %553, i32 0, i32 1
  %555 = load float, float* %554, align 4
  %556 = fcmp une float %546, %549
  %557 = fcmp une float %552, %555
  %558 = and i1 %556, %557
  br i1 %558, label %then57, label %else58

then57:                                           ; preds = %loop.end51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %loop.end51
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  %559 = getelementptr %array, %array* %a, i32 0, i32 3
  %560 = load i1, i1* %559, align 1
  br i1 %560, label %then60, label %else61

then60:                                           ; preds = %ifcont59
  %561 = getelementptr %array, %array* %a, i32 0, i32 0
  %562 = load i32*, i32** %561, align 8
  %563 = alloca i8*, align 8
  %564 = bitcast i32* %562 to i8*
  store i8* %564, i8** %563, align 8
  %565 = load i8*, i8** %563, align 8
  call void (i8*, ...) @_lfortran_free(i8* %565)
  %566 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %566, align 1
  br label %ifcont62

else61:                                           ; preds = %ifcont59
  br label %ifcont62

ifcont62:                                         ; preds = %else61, %then60
  %567 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %568 = load i1, i1* %567, align 1
  br i1 %568, label %then63, label %else64

then63:                                           ; preds = %ifcont62
  %569 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %570 = load float*, float** %569, align 8
  %571 = alloca i8*, align 8
  %572 = bitcast float* %570 to i8*
  store i8* %572, i8** %571, align 8
  %573 = load i8*, i8** %571, align 8
  call void (i8*, ...) @_lfortran_free(i8* %573)
  %574 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %574, align 1
  br label %ifcont65

else64:                                           ; preds = %ifcont62
  br label %ifcont65

ifcont65:                                         ; preds = %else64, %then63
  %575 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  %576 = load i1, i1* %575, align 1
  br i1 %576, label %then66, label %else67

then66:                                           ; preds = %ifcont65
  %577 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %578 = load %complex_4*, %complex_4** %577, align 8
  %579 = alloca i8*, align 8
  %580 = bitcast %complex_4* %578 to i8*
  store i8* %580, i8** %579, align 8
  %581 = load i8*, i8** %579, align 8
  call void (i8*, ...) @_lfortran_free(i8* %581)
  %582 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 false, i1* %582, align 1
  br label %ifcont68

else67:                                           ; preds = %ifcont65
  br label %ifcont68

ifcont68:                                         ; preds = %else67, %then66
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
